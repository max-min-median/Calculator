[[["binCoeff", 4], [" = "], ["binCoeff(c, n, r, acc = 1) = r ? binCoeff(c, n, r - 1, acc * c * (n - r + 1) / r) : acc", 4]], [["normpdf", 4], [" = "], ["normpdf(x, mu = 0, sigma = 1) = 1/(sqrt(2pi) * sigma) e^(-1/2 ((x - mu)/sigma)^2)", 4]], [["normcdf", 4], [" = "], ["normcdf(a, b, mu = 0, sigma = 1) = integrate(normpdf, (a - mu)/sigma, (b - mu)/sigma)", 4]], [["gym", 4], [" = "], ["gym(a, b = 0, c = 0, d = 0, q = 0) = (45 + 2(45a + 25b + 10c + 5d + 2.5q)) lbToKg", 4]], [["vecSum", 4], [" = "], ["vecSum((a, b, c, d), (e, f, g, h)) = (a + e, b + f, c + g, d + h)", 4]], [["sumOfRoots", 4], [" = "], ["sumOfRoots(a, b, c) = q = quad(a, b, c); q @ 0 + q @ 1", 4]], [["map", 4], [" = "], ["map(f, v) = v$ ? (f(v @ 0):) <+> map(f, 1 </ v) : ()", 4]], [["reduce", 4], [" = "], ["reduce(f, v, a) = v$ ? reduce(f, 1 </ v, f(a, v @ 0)) : a", 4]], [["transpose", 4], [" = "], ["transpose(m, result = (), col = (), r = 0, c = 0) = result$ == (m @ 0)$ ? result : r == m$ ? transpose(m, result <+> (col:), (), 0, c + 1) : transpose(m, result, col <+> (m @ r @ c:), r + 1, c)", 4]], [["delta", 4], [" = "], ["1/100000000000000000000", 4]], [["toDeg", 4], [" = "], ["159121869262581/2777200530560", 4]], [["deg", 4], [" = "], ["89285273844/5115669363931", 4]], [["lbToKg", 4], [" = "], ["50000/110231", 4]], [["col", 4], [" = "], ["(1, 2, 3)", 4]], [["ans", 4], [" = "], ["((1, 6), (2, 7), (3, 8), (4, 9), (5, 10))", 4]], [], [["\u2666", 7], [">", 8], [" "], ["transpose"]], [["transpose(m, result = (), col = (), r = 0, c = 0) = result$ == (m @ 0)$ ? result : r == m$ ? transpose(m, result <+> (col:), (), 0, c + 1) : transpose(m, result, col <+> (m @ r @ c:), r + 1, c)", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult(A, B) = B = transpose(B); ( helper(result=(), row=(), r=0, c=0) = r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r+1, 0) : helper(result, row <+> (dotProduct(A@r, B@c):), r, c+1) ); helper()"]], [["matrixMult(A, B) = B = transpose(B); (helper(result = (), row = (), r = 0, c = 0) = r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r + 1, 0) : helper(result, row <+> (dotProduct(A @ r, B @ c):), r, c + 1)); helper()", 9]], [], [["\u2666", 7], [">", 8], [" "], ["A = ((1, 2), (3, 4))"]], [["((1, 2), (3, 4))", 9]], [], [["\u2666", 7], [">", 8], [" "], ["B = ((4, -1), (2, 6))"]], [["((4, -1), (2, 6))", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult(A, B)"]], [["((8, 11), (20, 21))", 9]], [], [["\u2666", 7], [">", 8], [" "], ["B"]], [["((4, -1), (2, 6))", 9]], [], [["\u2666", 7], [">", 8], [" "], ["A = ((1, 2, -3), (-7, 0, 2)); B = ((5:), (1:), (8:))"]], [["((5), (1), (8))", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult(A, B)"]], [["             \u2197\u203e\u203e\u203e\u203e", 10]], [["ParseError: Unable to parse 'r'", 10]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult"]], [["matrixMult(A, B) = B = transpose(B); r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r + 1, 0) : helper(result, row <+> (dotProduct(A @ r, B @ c):), r, c + 1); helper()", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult(A, B) = B = transpose(B); ( helper(result=(), row=(), r=0, c=0) = r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r+1, 0) : helper(result, row <+> (dotProduct(A@r, B@c):), r, c+1) ); helper()"]], [["matrixMult(A, B) = B = transpose(B); (helper(result = (), row = (), r = 0, c = 0) = r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r + 1, 0) : helper(result, row <+> (dotProduct(A @ r, B @ c):), r, c + 1)); helper()", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult(A, B)"]], [["((-17), (-19))", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult"]], [["matrixMult(A, B) = B = transpose(B); r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r + 1, 0) : helper(result, row <+> (dotProduct(A @ r, B @ c):), r, c + 1); helper()", 9]], [], [["\u2666", 7], [">", 8], [" "], ["transpose"]], [["transpose(m, result = (), col = (), r = 0, c = 0) = result$ == (m @ 0)$ ? result : r == m$ ? transpose(m, result <+> (col:), (), 0, c + 1) : transpose(m, result, col <+> (m @ r @ c:), r + 1, c)", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult(A, B) = B = transpose(B); ( helper(result=(), row=(), r=0, c=0) = r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r+1, 0) : helper(result, row <+> (dotProduct(A@r, B@c):), r, c+1) ); helper()"]], [["matrixMult(A, B) = B = transpose(B); (helper(result = (), row = (), r = 0, c = 0) = r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r + 1, 0) : helper(result, row <+> (dotProduct(A @ r, B @ c):), r, c + 1)); helper()", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult(A, B) = B = transpose(B); ( helper(result=(), row=(), r=0, c=0) = r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r+1, 0) : helper(result, row <+> (dotProduct(A@r, B@c):), r, c+1) ); helper()"]], [["matrixMult(A, B) = B = transpose(B); (helper(result = (), row = (), r = 0, c = 0) = r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r + 1, 0) : helper(result, row <+> (dotProduct(A @ r, B @ c):), r, c + 1)); helper()", 9]], [], [["\u2666", 7], [">", 8], [" "], ["A"]], [["  \u2197\u203e", 10]], [["ParseError: Unable to parse 'A'", 10]], [], [["\u2666", 7], [">", 8], [" "], ["B"]], [["  \u2197\u203e", 10]], [["ParseError: Unable to parse 'B'", 10]], [], [["\u2666", 7], [">", 8], [" "], ["A = ((1, 2), (3, 4))"]], [["((1, 2), (3, 4))", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult(A, A)"]], [["((7, 10), (15, 22))", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult"]], [["matrixMult(A, B) = B = transpose(B); (helper(result = (), row = (), r = 0, c = 0) = r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r + 1, 0) : helper(result, row <+> (dotProduct(A @ r, B @ c):), r, c + 1)); helper()", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult(A, A)"]], [["((7, 10), (15, 22))", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult(A, A)"]], [["((7, 10), (15, 22))", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult"]], [["matrixMult(A, B) = B = transpose(B); (helper(result = (), row = (), r = 0, c = 0) = r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r + 1, 0) : helper(result, row <+> (dotProduct(A @ r, B @ c):), r, c + 1)); helper()", 9]], [], [["\u2666", 7], [">", 8], [" "], ["A = ((3, -1, 1), (-3, 5, 0))"]], [["((3, -1, 1), (-3, 5, 0))", 9]], [], [["\u2666", 7], [">", 8], [" "], ["B = ((-4, 0, 1), (0, 1, -1), (0, 0, 0))"]], [["((-4, 0, 1), (0, 1, -1), (0, 0, 0))", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult(A, B)"]], [["((-12, -1, 4), (12, 5, -8))", 9]], [], [["\u2666", 7], [">", 8], [" "], ["dotProduct"]], [["dotProduct(u, v) = u$ ? u @ 0 conj(v @ 0) + dotProduct(1 </ u, 1 </ v) : 0", 9]], [], [["\u2666", 7], [">", 8], [" "], ["transpose"]], [["transpose(m, result = (), col = (), r = 0, c = 0) = result$ == (m @ 0)$ ? result : r == m$ ? transpose(m, result <+> (col:), (), 0, c + 1) : transpose(m, result, col <+> (m @ r @ c:), r + 1, c)", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult"]], [["matrixMult(A, B) = B = transpose(B); (helper(result = (), row = (), r = 0, c = 0) = r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r + 1, 0) : helper(result, row <+> (dotProduct(A @ r, B @ c):), r, c + 1)); helper()", 9]], [], [["\u2666", 7], [">", 8], [" "], ["A = ((3, -1, 1), (-3, 5, 0))"]], [["((3, -1, 1), (-3, 5, 0))", 9]], [], [["\u2666", 7], [">", 8], [" "], ["B = ((-4, 0, 1), (0, 1, -1), (0, 0, 0))"]], [["((-4, 0, 1), (0, 1, -1), (0, 0, 0))", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult(A, B)"]], [["((-12, -1, 4), (12, 5, -8))", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult"]], [["matrixMult(A, B) = B = transpose(B); (helper(result = (), row = (), r = 0, c = 0) = r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r + 1, 0) : helper(result, row <+> (dotProduct(A @ r, B @ c):), r, c + 1)); helper()", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult(A, B) = B = transpose(B); ( helper(result=(), row=(), r=0, c=0) = r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r+1, 0) : helper(result, row <+> (dotProduct(A@r, B@c):), r, c+1) )()"]], [["matrixMult(A, B) = B = transpose(B); (helper(result = (), row = (), r = 0, c = 0) = r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r + 1, 0) : helper(result, row <+> (dotProduct(A @ r, B @ c):), r, c + 1))()", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult(A, B)"]], [["((-12, -1, 4), (12, 5, -8))", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult(A, B)"]], [["((-12, -1, 4), (12, 5, -8))", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult"]], [["matrixMult(A, B) = B = transpose(B); (helper(result = (), row = (), r = 0, c = 0) = r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r + 1, 0) : helper(result, row <+> (dotProduct(A @ r, B @ c):), r, c + 1))()", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult"]], [["matrixMult(A, B) = B = transpose(B); (helper(result = (), row = (), r = 0, c = 0) = r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r + 1, 0) : helper(result, row <+> (dotProduct(A @ r, B @ c):), r, c + 1))()", 9]], [], [["\u2666", 7], [">", 8], [" "], ["dotProduct"]], [["dotProduct(u, v) = u$ ? u @ 0 conj(v @ 0) + dotProduct(1 </ u, 1 </ v) : 0", 9]], [], [["\u2666", 7], [">", 8], [" "], ["transpose"]], [["transpose(m, result = (), col = (), r = 0, c = 0) = result$ == (m @ 0)$ ? result : r == m$ ? transpose(m, result <+> (col:), (), 0, c + 1) : transpose(m, result, col <+> (m @ r @ c:), r + 1, c)", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult"]], [["matrixMult(A, B) = B = transpose(B); (helper(result = (), row = (), r = 0, c = 0) = r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r + 1, 0) : helper(result, row <+> (dotProduct(A @ r, B @ c):), r, c + 1))()", 9]], [], [["\u2666", 7], [">", 8], [" "], ["A = ((3, -1, 1), (-3, 5, 0))"]], [["((3, -1, 1), (-3, 5, 0))", 9]], [], [["\u2666", 7], [">", 8], [" "], ["B = ((-4, 0, 1), (0, 1, -1), (0, 0, 0))"]], [["((-4, 0, 1), (0, 1, -1), (0, 0, 0))", 9]], [], [["\u2666", 7], [">", 8], [" "], ["matrixMult(A, B)"]], [["((-12, -1, 4), (12, 5, -8))", 9]]]
["root(f,0,5)", "root((f(x)=x^2-5),0,5)", "f", "f", "root(f(x)=x^2-5,0,5)", "f", "root((f(x)=x^2-5),0,5)", "f", "root(((f(x)=x^2-5)),0,5)", "f", "root(f(x)=x^2-5,0,5)", "e^1.7213222", "10^43", "10^0.1575464564", "3^0.1575464564", "5^0.1575464564", "vars", "f", "(f(x)=x^2-5)", "f", "(f(x)=x^2-5, 2, 3)", "f", "(f(x)=x^2)", "f(x)=x^2", "(f(x)=x^2)", "(f(x)=x^2)(5)", "f()=x^2", "f()=x^+4", "f()=x^/4", "(f(x)=(x^2))", "(f(x)=((x^2)))", "f", "d(5)", "f(5)", "d", "5d", "5f(3)", "vars", "del a s d asd", "del f", "vars", "f", "f(x)=x^2", "f", "f(3)", "f(4)", "f", "f", "(1, 2, 3, 4, 5) /> 2", "(1, 2, 3, 4, 5) </ 2", "(1, 2, 3, 4, 5) </ 0", "(1, 2, 3, 4, 5) /> 0", "(1, 2, 3, 4, 5) /> -1", "1 </ (3, 5, pi, i, 4) /> 1", "2 </ (3, 5, 5/2, e^ipi/2, i, 7+3+2) /> 1", "dotProduct", "dotProduct(u, v) = u$ ? (u@0)(v@0) + dotProduct(1 </ u, 1 </ v) : 0", "dotProduct(u, v) = u$ ? u@0 conj(v@0) + dotProduct(1 </ u, 1 </ v) : 0", "dotProduct((1, 2), (3, 4))", "dotProduct((1, 2, 3), (4, 5, 6))", "map(f, v) = v$ ? (f(v):) <+> map(f, 1</v) : ()", "f", "map(f, v) = v$ ? (f(v@0):) <+> map(f, 1</v) : ()", "map(f, [1, 2, 3, 4, 5])", "reduce' = 5", "reduce(f, v, a) = v$ : reduce(f, 1 </ v, f(a, v@0)) : a", "sum(x, y) = x + y", "reduce(sum, (1, 3, 5, 7, 9), 0)", "reduce(sum, (1, 2, 3), 0)", "reduce(sum, (1, 2, 3, 4, 5, 6), 0)", "sum(x, y) = xy", "reduce(sum, (1, 2), 0)", "reduce", "5 : 3", "5 : 3 : 2", "5:3", ":", "5:3", "5:3", "5:3", "reduce(f, v, a) = v$ : reduce(f, 1 </ v, f(a, v@0)) : a", "reduce(f, v, a) = v$ ? reduce(f, 1 </ v, f(a, v@0)) : a", "reduce(sum(x, y) = x + y, (1, 3, 5, 7, 9), 0)", "sum", "del sum", "f(5)", "sum", "f(x) = (sum(x, y) = x + y); sum(x, x^2)", "del x", "del f", "transpose(m, result=(), col=(), r=0, c=0) = (result$ == m$) ? acc : c == m@0$ ? transpose(m, result <+> col, r+1, 0) : transpose(m, result, col <+> (m@r@c:), r, c+1)", "transpose(m, result=(), col=(), r=0, c=0) = (result$ == m$) ? result : c == m@0$ ? transpose(m, result <+> col, r+1, 0) : transpose(m, result, col <+> (m@r@c:), r, c+1)", "transpose(m, result=(), col=(), r=0, c=0) = (result$ == m$) ? result : c == m@0$ ? transpose(m, result <+> (col:), r+1, 0) : transpose(m, result, col <+> (m@r@c:), r, c+1)", "transpose((1, 2), (3, 4))", "transpose(((1, 2), (3, 4))", "transpose(((1, 2), (3, 4)))", "m = ((1, 2), (3, 4))", "m@0@0", "(m@0@0:)", "(3:)", "transpose(m, result=(), col=(), r=0, c=0) = (result$ == m$) ? result : c == (m@0)$ ? transpose(m, result <+> (col:), r+1, 0) : transpose(m, result, col <+> (m@r@c:), r, c+1)", "transpose(m, result=(), col=(), r=0, c=0) = (m@0$ == c) ? result : c == (m@0)$ ? transpose(m, result <+> (col:), r+1, 0) : transpose(m, result, col <+> (m@r@c:), r, c+1)", "m", "m@0$", "transpose(m, result=(), col=(), r=0, c=0) = result$ == c ? result : r == m$ ? transpose(m, result <+> (col:), 0, c + 1) : transpose(m, result, col <+> (m@r@c:), r+1, c)", "transpose(m, result=(), col=(), r=0, c=0) = result$ == (m@0)$ ? result : r == m$ ? transpose(m, result <+> (col:), 0, c + 1) : transpose(m, result, col <+> (m@r@c:), r+1, c)", "transpose(((1, 2), (3, 4)))", "() <+> ((1, 2, 3):)", "col = (1, 2, 3)", "() <+> col", "() <+> (col)", "() <+> (col:)", "() <+> (col:) <+> (col:)", "vars", "transpose", "transpose(((1, 2), (3, 4)))", "transpose(m, result=(), col=(), r=0, c=0) = result$ == (m@0)$ ? result : r == m$ ? transpose(m, result <+> (col:), (), 0, c + 1) : transpose(m, result, col <+> (m@r@c:), r+1, c)", "transpose(((1, 2), (3, 4)))", "transpose(((1, 2, 3, 4, 5), (6, 7, 8, 9, 10))", "vars", "transpose", "A = ((1, 2), (3, 4))", "B = ((4, -1), (2, 6))", "matrixMult(A, B)", "B", "A = ((1, 2, -3), (-7, 0, 2)); B = ((5:), (1:), (8:))", "matrixMult", "matrixMult(A, B)", "matrixMult", "transpose", "matrixMult(A, B) = B = transpose(B); ( helper(result=(), row=(), r=0, c=0) = r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r+1, 0) : helper(result, row <+> (dotProduct(A@r, B@c):), r, c+1) ); helper()", "A", "B", "A = ((1, 2), (3, 4))", "matrixMult", "matrixMult(A, A)", "matrixMult", "matrixMult(A, B)", "dotProduct", "transpose", "matrixMult", "matrixMult(A, B) = B = transpose(B); ( helper(result=(), row=(), r=0, c=0) = r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r+1, 0) : helper(result, row <+> (dotProduct(A@r, B@c):), r, c+1) )()", "matrixMult(A, B)", "matrixMult", "dotProduct", "transpose", "matrixMult", "A = ((3, -1, 1), (-3, 5, 0))", "B = ((-4, 0, 1), (0, 1, -1), (0, 0, 0))", "matrixMult(A, B)"]
